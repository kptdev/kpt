# Copyright 2019 The kpt Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

swagger: "2.0"
definitions:
  Kptfile:
    type: "object"
    description: "Kptfile configures a kpt package"
    "x-kubernetes-group-version-kind":
      "kind": "Kptfile"
    properties:
      apiVersion:
        description: "apiVersion of the Kptfile"
        type: string
      kind:
        description: "kind -- always Kptfile"
        type: string
      dependencies:
        description: "Package dependencies to sync with the `kpt pkg sync` command"
        type: "array"
        items:
          "$ref": "#/definitions/Dependency"
      openAPI:
        description: "Package specific OpenAPI definitions to be applied to the package contents."
        "$ref": "#/definitions/OpenAPI"
      upstream:
        description: "Metadata about the upstream source"
        "$ref": "#/definitions/Upstream"

  OpenAPI:
    type: "object"
    description: "OpenAPI schema definitions"
    properties:
      definitions:
        type: object
        additionalProperties:
          example: "io.k8s.cli.setters.replicas"
          description: "keys for setters and substitutions must be of the form io.k8s.cli.setters.NAME or io.k8s.cli.substitution.NAME"
          type: object
          properties:
            x-k8s-cli:
              description: "kubernetes configuration specific extensions"
              "$ref": "#/definitions/Extension"

  Extension:
    type: "object"
    properties:
      type:
        description: "field type the setter sets"
        type: string
        enum: ["array", "boolean", "integer", "string"]
        example: "string"
      setter:
        description: "definition of setter which may be invoked from the cli"
        type: object
        properties:
          name:
            description: "name of the setter, should match the name in the definition key"
            type: string
            example: "replicas"
          value:
            description: "current value of the setter, which should be applied to fields and substitutions"
            type: string
            example: "3"
          listValues:
            description: "list of string values to be used if the type is array"
            type: array
            example: ["a", "b", "c"]
      substitution:
        description: "definition of setter which may be invoked from the cli"
        type: object
        properties:
          name:
            description: "name of the setter, should match the name in the definition key"
            type: string
            example: "tag"
          pattern:
            description: "pattern to substitute one or more setters into"
            type: string
            example: "nginx:$(TAG_SETTER)"
          values:
            description: "setters to substitute into the pattern"
            type: array
            items:
              type: object
              properties:
                marker:
                  description: "string marker in the pattern which will be replaced by the setter's value"
                  type: string
                  example: "$(TAG_SETTER)"
                "$ref":
                  description: "reference to a setter OpenAPI definition to pull the value from"
                  type: string
                  example: "#/definitions/io.k8s.cli.setters.tag"

  Dependency:
    type: "object"
    properties:
      name:
        description: "Name of the dependency -- must be unique"
        type: "string"
      upstream:
        description: "Name of the dependency -- must be unique"
        "$ref": "#/definitions/Upstream"
      ensureNotExists:
        description: "Set to true to delete the dependency"
        type: "boolean"
      strategy:
        description: "Update merge strategy."
        type: "string"
      autoSet:
        description: "When syncing this dependency, automatically perform setters by pulling their values from environment variables."
        type: "boolean"

  Upstream:
    type: "object"
    properties:
      type:
        description: "Type of the upstream source -- always git"
        type: "string"
      git:
        description: "Metadata about the upstream git repo"
        properties:
          commit:
            description: "Upstream git commit the the package was last fetched at."
            type: "string"
          repo:
            description: "Upstream git repo."
            type: "string"
          directory:
            description: "Upstream git subdirectory."
            type: "string"
          ref:
            description: "Upstream git ref the the package was last fetched at."
            type: "string"
