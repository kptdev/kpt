// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package ioutil

import (
	"io/fs"
	"io/ioutil"

	"github.com/GoogleContainerTools/kpt/internal/types"
)

// ReadFile reads the file named by filename and returns the contents.
// A successful call returns err == nil, not err == EOF. Because ReadFile
// reads the whole file, it does not treat an EOF from Read as an error
// to be reported.
//
// As of Go 1.16, this function simply calls os.ReadFile.
func ReadFile(filename types.FileSystemPath) ([]byte, error) {
	return filename.FileSystem.ReadFile(filename.Path)
}

// WriteFile writes data to a file named by filename.
// If the file does not exist, WriteFile creates it with permissions perm
// (before umask); otherwise WriteFile truncates it before writing, without changing permissions.
//
// As of Go 1.16, this function simply calls os.WriteFile.
func WriteFile(filename types.FileSystemPath, data []byte, perm fs.FileMode) error {
	return filename.FileSystem.WriteFile(filename.Path, data)
}

// TempDir creates a new temporary directory in the directory dir.
// The directory name is generated by taking pattern and applying a
// random string to the end. If pattern includes a "*", the random string
// replaces the last "*". TempDir returns the name of the new directory.
// If dir is the empty string, TempDir uses the
// default directory for temporary files (see os.TempDir).
// Multiple programs calling TempDir simultaneously
// will not choose the same directory. It is the caller's responsibility
// to remove the directory when no longer needed.
//
// As of Go 1.17, this function simply calls os.MkdirTemp.
func TempDir(dir, pattern string) (name types.FileSystemPath, err error) {
	// TODO(dejardin) would be nice to have inmemory TempDir, but this wasn't compat enouch
	// if dir == "" {
	// 	dir = "/inmemory/tmp"
	// }
	// dir = filepath.Join("/", dir)

	// name.FileSystem = filesys.MakeFsInMemory()
	// name.Path = dir
	// err = name.FileSystem.MkdirAll(name.Path)
	// return

	path, err := ioutil.TempDir(dir, pattern)
	if err != nil {
		return types.FileSystemPath{}, err
	}
	return types.DiskPath(path), nil
}
