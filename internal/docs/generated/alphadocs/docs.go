// Code generated by "mdtogo"; DO NOT EDIT.
package alphadocs

var AlphaShort = `This command is currently in alpha and might change without notice.`
var AlphaLong = `
The ` + "`" + `alpha` + "`" + ` command group contains subcommands which are in alpha and might change without notice.
`

var RepoShort = `[Alpha] Manage package repositories.`
var RepoLong = `
[Alpha] The ` + "`" + `repo` + "`" + ` command group contains subcommands for managing package repositories.
`

var RegShort = `Registers a package repository with Package Orchestrator.`
var RegLong = `
  kpt alpha repo reg[ister] REPOSITORY [flags]

Args:

  REPOSITORY:
    Address of the repository to register. Required argument.

Flags:

  --description
    Brief description of the package repository.
  
  --name
    Name of the package repository. If unspecified, will use the name portion (last segment) of the repository URL.
  
  --title
    Title of the package repository.
  
  --repo-username
    Username for repository authentication.
  
  --repo-password
    Password for repository authentication.
  
`

var RpkgShort = `[Alpha] Manage packages in package repositories.`
var RpkgLong = `
[Alpha] The ` + "`" + `rpkg` + "`" + ` command group contains subcommands for managing packages in repositories.
`

var ListShort = `Lists packages in registered repositories.`
var ListLong = `
  kpt alpha rpkg list [flags]

Flags:

  --name
    Name of the packages to list. Any package whose name contains this value will be included in the results.
  
`

var ResShort = `Reads package resources.`
var ResLong = `
  kpt alpha rpkg res[ources] PACKAGE [DIR]

Args:

  PACKAGE:
    Name of the package containing the resources.
  
  DIR:
    Optional path to a local directory to write resources to. The directory must not already exist.
  

Flags:

  --namespace
    Namespace containing the package.
  
`

var StoreShort = `Stores package resources into a remote package.`
var StoreLong = `
  kpt alpha rpkg store PACKAGE [DIR]

Args:

  PACKAGE:
    Name of the package where to store the resources.
  
  DIR:
    Optional path to a local directory to read resources from.
  

Flags:

  --namespace
    Namespace containing the package.
  
`
