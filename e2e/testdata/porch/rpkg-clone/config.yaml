commands:
  - args:
      - alpha
      - repo
      - register
      - --namespace=rpkg-clone
      - --name=git
      - http://git-server.test-git-namespace.svc.cluster.local:8080/rpkg-clone
  - args:
      - alpha
      - rpkg
      - clone
      - --namespace=rpkg-clone
      - https://github.com/platkrm/test-blueprints.git/basens@basens/v1
      - --repository=git
      - --workspace=clone-2
      - basens-clone
    stdout: "git-3465eed5831e5c372243d048631c8ef1666b47d6 created\n"
  - args:
      - alpha
      - rpkg
      - clone
      - --namespace=rpkg-clone
      - https://github.com/platkrm/test-blueprints.git/basens@basens/v1
      - --repository=git
      - --workspace=clone-3
      - basens-clone
    stderr: "error: `clone` cannot create a new revision for package \"basens-clone\" that already exists in repo \"git\"; make subsequent revisions using `copy`\n"
    exitCode: 1
  - args:
      - alpha
      - repo
      - register
      - https://github.com/platkrm/test-blueprints.git
      - --namespace=rpkg-clone
  - args:
      - alpha
      - rpkg
      - get
      - --namespace=rpkg-clone
      - --name=empty
      - --revision=v1
      - --output=jsonpath={.metadata.name}
    stdout: test-blueprints-e78ee77d9560703561c2656c97c77e9abb8c4c53
  - args:
      - alpha
      - rpkg
      - clone
      - --namespace=rpkg-clone
      - test-blueprints-e78ee77d9560703561c2656c97c77e9abb8c4c53
      - --repository=git
      - --workspace=clone-1
      - empty-clone
    stdout: "git-b67f9ce14d378317ba83c9504eab9cc024932dd3 created\n"
  - args:
      - alpha
      - rpkg
      - pull
      - --namespace=rpkg-clone
      - git-3465eed5831e5c372243d048631c8ef1666b47d6
    stdout: |
      apiVersion: config.kubernetes.io/v1
      items:
      - apiVersion: kpt.dev/v1
        info:
          description: sample description
        kind: Kptfile
        metadata:
          annotations:
            config.kubernetes.io/index: "0"
            config.kubernetes.io/path: Kptfile
            internal.config.kubernetes.io/index: "0"
            internal.config.kubernetes.io/path: Kptfile
            internal.kpt.dev/upstream-identifier: kpt.dev|Kptfile|default|basens-clone
          name: basens-clone
        upstream:
          git:
            directory: basens
            ref: basens/v1
            repo: https://github.com/platkrm/test-blueprints.git
          type: git
        upstreamLock:
          git:
            commit: 67f29546028f0a48c6bbb08614934d0e070cdd3a
            directory: basens
            ref: basens/v1
            repo: https://github.com/platkrm/test-blueprints.git
          type: git
      - apiVersion: v1
        kind: Namespace
        metadata:
          annotations:
            config.kubernetes.io/index: "0"
            config.kubernetes.io/path: namespace.yaml
            internal.config.kubernetes.io/index: "0"
            internal.config.kubernetes.io/path: namespace.yaml
            internal.kpt.dev/upstream-identifier: '|Namespace|default|example'
          name: example
      kind: ResourceList
    yaml: true
  - args:
      - alpha
      - rpkg
      - pull
      - --namespace=rpkg-clone
      - git-b67f9ce14d378317ba83c9504eab9cc024932dd3
    stdout: |
      apiVersion: config.kubernetes.io/v1
      items:
      - apiVersion: kpt.dev/v1
        info:
          description: Empty Blueprint
        kind: Kptfile
        metadata:
          annotations:
            config.kubernetes.io/index: "0"
            internal.config.kubernetes.io/index: "0"
            internal.config.kubernetes.io/path: Kptfile
            internal.kpt.dev/upstream-identifier: kpt.dev|Kptfile|default|empty-clone
          name: empty-clone
        upstream:
          git:
            directory: empty
            ref: empty/v1
            repo: https://github.com/platkrm/test-blueprints.git
          type: git
        upstreamLock:
          git:
            commit: 3de8635354eda8e7de756494a4e0eb5c12af01ab
            directory: empty
            ref: empty/v1
            repo: https://github.com/platkrm/test-blueprints.git
          type: git
      kind: ResourceList
    yaml: true
