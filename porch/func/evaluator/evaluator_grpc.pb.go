// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: evaluator.proto

package evaluator

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FunctionEvaluatorClient is the client API for FunctionEvaluator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FunctionEvaluatorClient interface {
	// Evaluates a kpt function on the provided package
	EvaluateFunction(ctx context.Context, in *EvaluateFunctionRequest, opts ...grpc.CallOption) (*EvaluateFunctionResponse, error)
}

type functionEvaluatorClient struct {
	cc grpc.ClientConnInterface
}

func NewFunctionEvaluatorClient(cc grpc.ClientConnInterface) FunctionEvaluatorClient {
	return &functionEvaluatorClient{cc}
}

func (c *functionEvaluatorClient) EvaluateFunction(ctx context.Context, in *EvaluateFunctionRequest, opts ...grpc.CallOption) (*EvaluateFunctionResponse, error) {
	out := new(EvaluateFunctionResponse)
	err := c.cc.Invoke(ctx, "/evaluator.FunctionEvaluator/EvaluateFunction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FunctionEvaluatorServer is the server API for FunctionEvaluator service.
// All implementations must embed UnimplementedFunctionEvaluatorServer
// for forward compatibility
type FunctionEvaluatorServer interface {
	// Evaluates a kpt function on the provided package
	EvaluateFunction(context.Context, *EvaluateFunctionRequest) (*EvaluateFunctionResponse, error)
	mustEmbedUnimplementedFunctionEvaluatorServer()
}

// UnimplementedFunctionEvaluatorServer must be embedded to have forward compatible implementations.
type UnimplementedFunctionEvaluatorServer struct {
}

func (UnimplementedFunctionEvaluatorServer) EvaluateFunction(context.Context, *EvaluateFunctionRequest) (*EvaluateFunctionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EvaluateFunction not implemented")
}
func (UnimplementedFunctionEvaluatorServer) mustEmbedUnimplementedFunctionEvaluatorServer() {}

// UnsafeFunctionEvaluatorServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FunctionEvaluatorServer will
// result in compilation errors.
type UnsafeFunctionEvaluatorServer interface {
	mustEmbedUnimplementedFunctionEvaluatorServer()
}

func RegisterFunctionEvaluatorServer(s grpc.ServiceRegistrar, srv FunctionEvaluatorServer) {
	s.RegisterService(&FunctionEvaluator_ServiceDesc, srv)
}

func _FunctionEvaluator_EvaluateFunction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvaluateFunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FunctionEvaluatorServer).EvaluateFunction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/evaluator.FunctionEvaluator/EvaluateFunction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FunctionEvaluatorServer).EvaluateFunction(ctx, req.(*EvaluateFunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FunctionEvaluator_ServiceDesc is the grpc.ServiceDesc for FunctionEvaluator service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FunctionEvaluator_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "evaluator.FunctionEvaluator",
	HandlerType: (*FunctionEvaluatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EvaluateFunction",
			Handler:    _FunctionEvaluator_EvaluateFunction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "evaluator.proto",
}
