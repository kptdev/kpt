# Copyright 2023 The kpt Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: packagevariants.config.porch.kpt.dev
spec:
  group: config.porch.kpt.dev
  names:
    kind: PackageVariant
    listKind: PackageVariantList
    plural: packagevariants
    singular: packagevariant
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageVariant represents an upstream and downstream porch package
          pair. The upstream package should already exist. The PackageVariant controller
          is responsible for creating the downstream package revisions based on the
          spec.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageVariantSpec defines the desired state of PackageVariant
            properties:
              adoptionPolicy:
                type: string
              annotations:
                additionalProperties:
                  type: string
                type: object
              deletionPolicy:
                type: string
              downstream:
                properties:
                  package:
                    type: string
                  repo:
                    type: string
                type: object
              injectors:
                items:
                  description: InjectionSelector specifies how to select in-cluster
                    objects for resolving injection points.
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              labels:
                additionalProperties:
                  type: string
                type: object
              packageContext:
                description: PackageContext defines the data to be added or removed
                  from the kptfile.kpt.dev ConfigMap during reconciliation.
                properties:
                  data:
                    additionalProperties:
                      type: string
                    type: object
                  removeKeys:
                    items:
                      type: string
                    type: array
                type: object
              pipeline:
                description: Pipeline declares a pipeline of functions used to mutate
                  or validate resources.
                properties:
                  mutators:
                    description: Mutators defines a list of of KRM functions that
                      mutate resources.
                    items:
                      description: Function specifies a KRM function.
                      properties:
                        configMap:
                          additionalProperties:
                            type: string
                          description: '`ConfigMap` is a convenient way to specify
                            a function config of kind ConfigMap.'
                          type: object
                        configPath:
                          description: '`ConfigPath` specifies a slash-delimited relative
                            path to a file in the current directory containing a KRM
                            resource used as the function config. This resource is
                            excluded when resolving ''sources'', and as a result cannot
                            be operated on by the pipeline.'
                          type: string
                        exclude:
                          description: '`Exclude` are used to specify resources on
                            which the function should NOT be executed. If not specified,
                            all resources selected by `Selectors` are selected.'
                          items:
                            description: Selector specifies the selection criteria
                              please update IsEmpty method if more properties are
                              added
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations on the target resources
                                type: object
                              apiVersion:
                                description: APIVersion of the target resources
                                type: string
                              kind:
                                description: Kind of the target resources
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels on the target resources
                                type: object
                              name:
                                description: Name of the target resources
                                type: string
                              namespace:
                                description: Namespace of the target resources
                                type: string
                            type: object
                          type: array
                        exec:
                          description: "Exec specifies the function binary executable.
                            The executable can be fully qualified or it must exists
                            in the $PATH e.g: \n exec: set-namespace exec: /usr/local/bin/my-custom-fn"
                          type: string
                        image:
                          description: "`Image` specifies the function container image.
                            It can either be fully qualified, e.g.: \n image: gcr.io/kpt-fn/set-labels
                            \n Optionally, kpt can be configured to use a image registry
                            host-path that will be used to resolve the image path
                            in case the image path is missing (Defaults to gcr.io/kpt-fn).
                            e.g. The following resolves to gcr.io/kpt-fn/set-labels:
                            \n image: set-labels"
                          type: string
                        name:
                          description: '`Name` is used to uniquely identify the function
                            declaration this is primarily used for merging function
                            declaration with upstream counterparts'
                          type: string
                        selectors:
                          description: '`Selectors` are used to specify resources
                            on which the function should be executed if not specified,
                            all resources are selected'
                          items:
                            description: Selector specifies the selection criteria
                              please update IsEmpty method if more properties are
                              added
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations on the target resources
                                type: object
                              apiVersion:
                                description: APIVersion of the target resources
                                type: string
                              kind:
                                description: Kind of the target resources
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels on the target resources
                                type: object
                              name:
                                description: Name of the target resources
                                type: string
                              namespace:
                                description: Namespace of the target resources
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  validators:
                    description: Validators defines a list of KRM functions that validate
                      resources. Validators are not permitted to mutate resources.
                    items:
                      description: Function specifies a KRM function.
                      properties:
                        configMap:
                          additionalProperties:
                            type: string
                          description: '`ConfigMap` is a convenient way to specify
                            a function config of kind ConfigMap.'
                          type: object
                        configPath:
                          description: '`ConfigPath` specifies a slash-delimited relative
                            path to a file in the current directory containing a KRM
                            resource used as the function config. This resource is
                            excluded when resolving ''sources'', and as a result cannot
                            be operated on by the pipeline.'
                          type: string
                        exclude:
                          description: '`Exclude` are used to specify resources on
                            which the function should NOT be executed. If not specified,
                            all resources selected by `Selectors` are selected.'
                          items:
                            description: Selector specifies the selection criteria
                              please update IsEmpty method if more properties are
                              added
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations on the target resources
                                type: object
                              apiVersion:
                                description: APIVersion of the target resources
                                type: string
                              kind:
                                description: Kind of the target resources
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels on the target resources
                                type: object
                              name:
                                description: Name of the target resources
                                type: string
                              namespace:
                                description: Namespace of the target resources
                                type: string
                            type: object
                          type: array
                        exec:
                          description: "Exec specifies the function binary executable.
                            The executable can be fully qualified or it must exists
                            in the $PATH e.g: \n exec: set-namespace exec: /usr/local/bin/my-custom-fn"
                          type: string
                        image:
                          description: "`Image` specifies the function container image.
                            It can either be fully qualified, e.g.: \n image: gcr.io/kpt-fn/set-labels
                            \n Optionally, kpt can be configured to use a image registry
                            host-path that will be used to resolve the image path
                            in case the image path is missing (Defaults to gcr.io/kpt-fn).
                            e.g. The following resolves to gcr.io/kpt-fn/set-labels:
                            \n image: set-labels"
                          type: string
                        name:
                          description: '`Name` is used to uniquely identify the function
                            declaration this is primarily used for merging function
                            declaration with upstream counterparts'
                          type: string
                        selectors:
                          description: '`Selectors` are used to specify resources
                            on which the function should be executed if not specified,
                            all resources are selected'
                          items:
                            description: Selector specifies the selection criteria
                              please update IsEmpty method if more properties are
                              added
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations on the target resources
                                type: object
                              apiVersion:
                                description: APIVersion of the target resources
                                type: string
                              kind:
                                description: Kind of the target resources
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels on the target resources
                                type: object
                              name:
                                description: Name of the target resources
                                type: string
                              namespace:
                                description: Namespace of the target resources
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              upstream:
                properties:
                  package:
                    type: string
                  repo:
                    type: string
                  revision:
                    type: string
                type: object
            type: object
          status:
            description: PackageVariantStatus defines the observed state of PackageVariant
            properties:
              conditions:
                description: Conditions describes the reconciliation state of the
                  object.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              downstreamTargets:
                description: DownstreamTargets contains the downstream targets that
                  the PackageVariant either created or adopted.
                items:
                  properties:
                    name:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
