# Copyright 2023 The kpt Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: progressiverolloutstrategies.gitops.kpt.dev
spec:
  group: gitops.kpt.dev
  names:
    kind: ProgressiveRolloutStrategy
    listKind: ProgressiveRolloutStrategyList
    plural: progressiverolloutstrategies
    singular: progressiverolloutstrategy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProgressiveRolloutStrategy is the Schema for the progressiverolloutstrategies
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProgressiveRolloutStrategySpec defines the desired state
              of ProgressiveRolloutStrategy
            properties:
              description:
                description: Description is a user friendly description of this rollout
                  strategy.
                type: string
              waves:
                description: Waves defines an order set of waves of rolling updates.
                items:
                  description: Wave represents a group of rolling updates in a progressive
                    rollout. It is also referred as steps, stages or phases of a progressive
                    rollout.
                  properties:
                    description:
                      type: string
                    maxConcurrent:
                      description: MaxConcurrent specifies maximum number of concurrent
                        updates to be performed in this wave.
                      format: int64
                      type: integer
                    name:
                      description: Name identifies the wave.
                      type: string
                    targets:
                      description: Targets specifies the clusters that are part of
                        this wave.
                      properties:
                        selector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - maxConcurrent
                  - name
                  type: object
                type: array
            required:
            - waves
            type: object
          status:
            description: ProgressiveRolloutStrategyStatus defines the observed state
              of ProgressiveRolloutStrategy
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
